class Node:
    def __init__(self,d):
        self.l=None
        self.r=None
        self.d=d
class Link:
    def __init__(self):
        self.head=None
    def insert(self,n):
        t=self.head
        t.l=None
        for i in range(n-1):
            m=Node(int(input('enter a element:')))
            t.r=m
            m.l=t
            t=m
    def print(self):
        t=self.head
        while t:
            print(t.d,end=' ')
            t=t.r
    def delete(self,p):
        t=self.head
        if t.r is None:
            print('empty')
            return
        for i in range(p-1):
            t=t.r
        t.l.r=t.r
        t.r.l=t.l
        t.l=None
        t.r=None
    def reverse(self):
        c=self.head
        p=None
        while c:
            n=c.r
            c.r=n
            c.l=p
            p=c
            c=n
        self.head=p
        k=self.head
        while k:
            print(k.d,end=' ')
            k=k.l
li=Link()
n1=Node(1)
li.head=n1
li.insert(int(input('enter no of elements:')))
li.print()
print()
li.delete(int(input('enter location:')))
li.print()
print()
li.reverse()




            
